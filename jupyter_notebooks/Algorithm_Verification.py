#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov  4 21:55:55 2022

@author: puneeth
"""

"""Opt 1"""

import numpy as np 

def t(a,b): 
    t_val  = [ 0, 0, 0, 20, 30, 70, 100, 140, 190 ]
    return t_val[b] - t_val[a] 

[ t0, t1, t2, t3, t4, t5, t6, t7, t8 ]  = [ 0, 0, 0, 20, 30, 70, 100, 140, 190 ]
node_times = { 0:t0, 1:t1, 2:t2, 3:t3, 4:t4, 5:t5, 6:t6, 7:t7, 8:t8 }
edge_mat = [ [0,0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,0,0],[1,1,0,0,0,1,0,0,0],[0,0,1,0,0,0,1,1,0],[0,0,0,1,0,0,1,0,1],[0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,1,0,1],[0,0,0,0,0,0,0,1,0] ]
edge_set = [ (7,8), (6,7), (5,8), (5,6), (4,7), (4,6), (3,5), (2,4), (1,3), (0,3) ]

N_nodes = len(node_times) #Number of nodes 

Cov_Mat = { x:{ y: np.nan for y in edge_set } for x in edge_set }

Cov_Mat[(7,8)][(7,8)] = t(7,8)

Cov_Mat[(7,8)][(6,7)] = 0
Cov_Mat[(6,7)][(7,8)] = 0

Cov_Mat[(6,7)][(6,7)] =t(6,7)

Cov_Mat[(5,8)][(7,8)] = t(5,8)*Cov_Mat[(7,8)][(7,8)] / ( t(5,8) + t(5,6) )
Cov_Mat[(7,8)][(5,8)] = t(5,8)*Cov_Mat[(7,8)][(7,8)] / ( t(5,8) + t(5,6) )

Cov_Mat[(5,8)][(6,7)] = t(5,8)*Cov_Mat[(6,7)][(6,7)] / ( t(5,8) + t(5,6) )
Cov_Mat[(6,7)][(5,8)] = t(5,8)*Cov_Mat[(6,7)][(6,7)] / ( t(5,8) + t(5,6) ) 

Cov_Mat[(5,8)][(5,8)] = t(5,8)*t(5,6)/( t(5,8) + t(5,6) ) + ( t(5,8)/( t(5,8) + t(5,6) ) )**2*t(6,8) 

Cov_Mat[(5,6)][(7,8)] = -t(5,6)*Cov_Mat[(7,8)][(7,8)]/( t(5,6) + t(5,8) )
Cov_Mat[(7,8)][(5,6)] = -t(5,6)*Cov_Mat[(7,8)][(7,8)]/( t(5,6) + t(5,8) )

Cov_Mat[(5,6)][(6,7)] = -t(5,6)*t(6,7)/( t(5,6) + t(5,8) )
Cov_Mat[(6,7)][(5,6)] = -t(5,6)*t(6,7)/( t(5,6) + t(5,8) )

Cov_Mat[(5,6)][(5,8)] = t(5,8)*t(5,6)/( t(5,6) + t(5,8) ) - t(5,6)*t(5,8)*t(6,8)/( t(5,6) + t(5,8) )**2
Cov_Mat[(5,8)][(5,6)] = t(5,8)*t(5,6)/( t(5,6) + t(5,8) ) - t(5,6)*t(5,8)*t(6,8)/( t(5,6) + t(5,8) )**2

Cov_Mat[(5,6)][(5,6)] = t(5,8)*t(5,6)/( t(5,8) + t(5,6) ) + ( t(5,6)/( t(5,6) + t(5,8) ) )**2*t(6,8)

Cov_Mat[(4,7)][(7,8)] = 0
Cov_Mat[(7,8)][(4,7)] = 0

Cov_Mat[(4,7)][(6,7)] = t(4,7)*t(6,7)/( t(4,7) + t(4,6) )
Cov_Mat[(6,7)][(4,7)] = t(4,7)*t(6,7)/( t(4,7) + t(4,6) )

Cov_Mat[(4,7)][(5,8)] = t(4,7)*Cov_Mat[(5,8)][(6,7)]/( t(4,7) + t(4,6) )
Cov_Mat[(5,8)][(4,7)] = t(4,7)*Cov_Mat[(5,8)][(6,7)]/( t(4,7) + t(4,6) )

Cov_Mat[(4,7)][(5,6)] = t(4,7)*Cov_Mat[(6,7)][(5,6)]/( t(4,7) + t(4,6) )
Cov_Mat[(5,6)][(4,7)] = t(4,7)*Cov_Mat[(6,7)][(5,6)]/( t(4,7) + t(4,6) )

Cov_Mat[(4,7)][(4,7)] = t(4,7)*t(4,6)/( t(4,6) + t(4,7) ) + ( t(4,7)/( t(4,7) + t(4,6) ) )**2*t(6,7)

Cov_Mat[(4,6)][(7,8)] = 0
Cov_Mat[(7,8)][(4,6)] = 0

Cov_Mat[(4,6)][(6,7)] = - t(4,6)*t(6,7)/( t(4,6) + t(4,7) )
Cov_Mat[(6,7)][(4,6)] = - t(4,6)*t(6,7)/( t(4,6) + t(4,7) )

Cov_Mat[(4,6)][(5,8)] = -t(4,6)*Cov_Mat[(5,8)][(6,7)]/( t(4,6) + t(4,7) )
Cov_Mat[(5,8)][(4,6)] = -t(4,6)*Cov_Mat[(5,8)][(6,7)]/( t(4,6) + t(4,7) )

Cov_Mat[(4,6)][(5,6)] = -t(4,6)*Cov_Mat[(6,7)][(5,6)]/( t(4,6) + t(4,7) )
Cov_Mat[(5,6)][(4,6)] = -t(4,6)*Cov_Mat[(6,7)][(5,6)]/( t(4,6) + t(4,7) )

Cov_Mat[(4,6)][(4,7)] = t(4,6)*t(4,7)/( t(4,6) + t(4,7) ) - t(4,6)*t(4,7)*t(6,7)/( t(4,6) + t(4,7) )**2
Cov_Mat[(4,7)][(4,6)] = t(4,6)*t(4,7)/( t(4,6) + t(4,7) ) - t(4,6)*t(4,7)*t(6,7)/( t(4,6) + t(4,7) )**2

Cov_Mat[(4,6)][(4,6)] = t(4,6)*t(4,7)/(t(4,6) + t(4,7)) + (t(4,6)/( t(4,6) + t(4,7) ))**2*t(6,7)

Cov_Mat[(3,5)][(3,5)] = t(3,5)
Cov_Mat[(2,4)][(2,4)] = t(2,4)
Cov_Mat[(1,3)][(1,3)] = t(1,3)
Cov_Mat[(0,3)][(0,3)] = t(0,3)

Cov_Mat1 = Cov_Mat




